@{
    ViewData["Title"] = "Geometry Calculator";
}

<!-- Tytuł strony -->
<h2>Geometry Calculator</h2>

<!-- Formularz do wprowadzania danych -->
<form id="geometryForm" class="needs-validation" novalidate>
    <div class="mb-3">
        <label for="width" class="form-label">Width:</label>
        <input type="number" id="width" name="width" class="form-control" required />
        <div class="invalid-feedback">
            Please provide a width.
        </div>
    </div>
    <div class="mb-3">
        <label for="height" class="form-label">Height:</label>
        <input type="number" id="height" name="height" class="form-control" required />
        <div class="invalid-feedback">
            Please provide a height.
        </div>
    </div>
    <button type="submit" class="btn btn-primary">Calculate</button>
</form>

<!-- Miejsce wyświetlania wyników -->
<div id="result" class="mt-3"></div>

@section Scripts {
    <script>
        console.log('JavaScript is loaded'); // Dodajemy logowanie, aby upewnić się, że skrypt jest ładowany

        document.addEventListener("DOMContentLoaded", function () {
            console.log('DOM fully loaded and parsed'); // Dodajemy logowanie, aby upewnić się, że DOM jest gotowy

            // Walidacja formularza Bootstrap
            (function () {
                'use strict'
                var forms = document.querySelectorAll('.needs-validation')
                Array.prototype.slice.call(forms)
                    .forEach(function (form) {
                        form.addEventListener('submit', function (event) {
                            if (!form.checkValidity()) {
                                event.preventDefault()
                                event.stopPropagation()
                            }
                            form.classList.add('was-validated')
                        }, false)
                    })
            })()

            // Dodajemy obsługę zdarzenia submit dla formularza
            document.getElementById("geometryForm").addEventListener("submit", function (event) {
                event.preventDefault(); // Zapobiega domyślnemu przesyłaniu formularza

                var width = document.getElementById("width").value;
                var height = document.getElementById("height").value;

                console.log("Sending data:", { Width: width, Height: height });

                // Wysyłanie danych do serwera za pomocą Fetch API
                fetch('/Geometry/Calculate', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ Width: width, Height: height })
                })
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Network response was not ok');
                        }
                        return response.json();
                    })
                    .then(data => {
                        console.log("Received data:", data);
                        // Wyświetlanie wyników w formularzu
                        document.getElementById("result").innerHTML = `
                                <div class="alert alert-success">
                                    <p>Area: ${data.area}</p>
                                    <p>Perimeter: ${data.perimeter}</p>
                                    <p>Diagonal: ${data.diagonal}</p>
                                    <p>Total Edge Length: ${data.totalEdgeLength}</p>
                                </div>
                            `;
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        // Wyświetlanie komunikatu o błędzie
                        document.getElementById("result").innerHTML = `<div class="alert alert-danger">Error calculating values. Please try again.</div>`;
                    });
            });
        });
    </script>
}